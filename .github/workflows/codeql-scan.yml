name: CodeQL-Scan

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ------------------------
      # Detect language
      # ------------------------
      - name: Detect language
        id: detect
        run: |
          if [ -f "pom.xml" ]; then
            echo "lang=java" >> "$GITHUB_OUTPUT"
          elif ls *.sln >/dev/null 2>&1; then
            echo "lang=dotnet" >> "$GITHUB_OUTPUT"
          else
            echo "lang=unknown" >> "$GITHUB_OUTPUT"
          fi

      # ------------------------
      # Java multi-module setup
      # ------------------------
      - name: Setup Java
        if: steps.detect.outputs.lang == 'java'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build Java (multi-module compile)
        if: steps.detect.outputs.lang == 'java'
        run: mvn -B clean install -DskipTests

      # ------------------------
      # .NET setup
      # ------------------------
      - name: Setup .NET SDK
        if: steps.detect.outputs.lang == 'dotnet'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore .NET dependencies
        if: steps.detect.outputs.lang == 'dotnet'
        run: dotnet restore

      - name: Build .NET
        if: steps.detect.outputs.lang == 'dotnet'
        run: dotnet build --configuration Release --no-restore

      # ------------------------
      # CodeQL
      # ------------------------
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ steps.detect.outputs.lang }}

      - name: Perform CodeQL Analysis
        id: codeql
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ steps.detect.outputs.lang }}"
          output: results.sarif

      # ------------------------
      # Convert SARIF â†’ HTML
      # ------------------------
      - name: Install SARIF tool
        run: npm install -g @microsoft/sarif-multitool

      - name: Convert SARIF to HTML
        run: |
          npx @microsoft/sarif-multitool transform results.sarif --format Html --output results.html || true

      - name: Upload CodeQL HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: codeql-report
          path: results.html
