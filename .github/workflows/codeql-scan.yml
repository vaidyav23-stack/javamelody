name: CodeQL CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  codeql-analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Detect project language
      - name: Detect language
        id: detect
        run: |
          if [ -f "pom.xml" ]; then
            echo "lang=java" >> "$GITHUB_OUTPUT"
          elif ls *.sln >/dev/null 2>&1; then
            echo "lang=dotnet" >> "$GITHUB_OUTPUT"
          else
            echo "lang=unknown" >> "$GITHUB_OUTPUT"
          fi

      # 3Ô∏è‚É£ Setup Java (if Java detected)
      - name: Setup Java
        if: steps.detect.outputs.lang == 'java'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # 4Ô∏è‚É£ Setup .NET (if .NET detected)
      - name: Setup .NET
        if: steps.detect.outputs.lang == 'dotnet'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 5Ô∏è‚É£ Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ steps.detect.outputs.lang == 'java' && 'java' || steps.detect.outputs.lang == 'dotnet' && 'csharp' || '' }}

      # 6Ô∏è‚É£ Build Java (Maven)
      - name: Build Java
        if: steps.detect.outputs.lang == 'java'
        run: mvn -B -DskipTests clean install

      # 7Ô∏è‚É£ Build .NET
      - name: Build .NET
        if: steps.detect.outputs.lang == 'dotnet'
        run: dotnet build --configuration Release --no-restore

      # 8Ô∏è‚É£ Run CodeQL Analysis (auto-generates SARIF)
      - name: CodeQL Analysis
        if: steps.detect.outputs.lang != 'unknown'
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ steps.detect.outputs.lang }}"

      # 9Ô∏è‚É£ Convert SARIF to HTML using Python
      - name: Convert SARIF to HTML
        if: steps.detect.outputs.lang != 'unknown'
        run: |
          python -m pip install --upgrade pip
          pip install sarif-om
          mkdir -p codeql-html
          python - <<EOF
          from sarif_om import load_json, render_html

# Load SARIF results generated by CodeQL
with open("results.sarif") as f:
    log = load_json(f)

# Render HTML
html_content = render_html(log)
with open("codeql-html/report.html", "w") as out_file:
    out_file.write(html_content)
EOF

      # üîü Upload HTML report
      - name: Upload HTML Report
        if: steps.detect.outputs.lang != 'unknown'
        uses: actions/upload-artifact@v4
        with:
          name: codeql-html-report
          path: codeql-html/report.html
